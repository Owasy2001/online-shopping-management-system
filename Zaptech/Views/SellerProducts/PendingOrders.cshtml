@model PagedList.IPagedList<Zaptech.Models.Order>
@using PagedList.Mvc
@{
    ViewBag.Title = "Pending Orders";
    Layout = "~/Views/Shared/_SellerLayout.cshtml";
}

<br />
<br />

<div class="card shadow-sm rounded">
    <div class="card-header d-flex justify-content-between align-items-center bg-danger text-white">
        <h3 class="card-title mb-0">⏳ Pending Orders</h3>

        <div class="mt-2 mb-3">
            <a href="@Url.Action("ExportPendingOrdersPDF", "SellerProducts")"
               class="btn btn-danger">
                <i class="bi bi-file-pdf"></i> Export to PDF
            </a>
        </div>

    </div>

    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover align-middle">
                <thead class="table-light">
                    <tr>
                        <th>Order #</th>
                        <th>Customer</th>
                        <th>Date</th>
                        <th>Total</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr>
                            <td>#ZT-@order.Id</td>
                            <td>@(order.User?.Name ?? "N/A")</td>
                            <td>@order.Order_date.ToString("MMM dd, yyyy")</td>
                            <td>$@order.Total_ammount.ToString("0.00")</td>
                            <td>
                                <span class="badge bg-warning">@order.Status</span>
                            </td>
                            <td>
                                <a href="@Url.Action("OrderDetails", "Seller", new { id = order.Id })"
                                   class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-eye"></i> View Details
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="mt-3 d-flex justify-content-center">
            @Html.PagedListPager(Model, page => Url.Action("PendingOrders", new { page }),
                          new PagedListRenderOptions
                          {
                              UlElementClasses = new[] { "pagination pagination-sm" },
                              LiElementClasses = new[] { "page-item" },
                              FunctionToTransformEachPageLink = (liTag, aTag) =>
                              {
                                  aTag.AddCssClass("page-link");
                                  liTag.InnerHtml = aTag.ToString();
                                  return liTag;
                              },
                              DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                              DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                              DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                              DisplayLinkToNextPage = PagedListDisplayMode.Always,
                              MaximumPageNumbersToDisplay = 5
                          })
        </div>
    </div>
</div>

