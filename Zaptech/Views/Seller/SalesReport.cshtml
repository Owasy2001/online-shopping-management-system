@model IEnumerable<Zaptech.Models.SalesReportViewModel>

@{
    ViewBag.Title = "Sales Report";
    Layout = "~/Views/Shared/_SellerLayout.cshtml"; // Make sure to include your layout
}
<br />
<br />
<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mt-4 mb-4">Sales Report</h2>
        <a href="@Url.Action("ExportSalesReportPDF")" class="btn btn-danger">
            <i class="bi bi-file-pdf"></i> Export to PDF
        </a>
    </div>
    </div>

    <div class="container">
        <!-- Chart Container -->
        <div class="chart-container">
            <canvas id="salesChart"></canvas>
        </div>

        <!-- Table View -->
        <div class="mt-5">
            <h3>Detailed Sales Data</h3>
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th>Product ID</th>
                            <th>Product Name</th>
                            <th>Quantity Sold</th>
                            <th>Total Revenue</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.ProductId</td>
                                <td>@item.ProductName</td>
                                <td>@item.TotalQuantity</td>
                                <td>@item.TotalRevenue.ToString("C2")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @section Scripts {
        <!-- Include Chart.js -->
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

        <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Prepare chart data
            var products = @Html.Raw(Json.Encode(Model.Select(m => m.ProductName)));
            var revenues = @Html.Raw(Json.Encode(Model.Select(m => m.TotalRevenue)));
            var quantities = @Html.Raw(Json.Encode(Model.Select(m => m.TotalQuantity)));

            // Get chart context
            var ctx = document.getElementById('salesChart').getContext('2d');

            // Create combined chart
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: products,
                    datasets: [
                        {
                            label: 'Revenue ($)',
                            data: revenues,
                            backgroundColor: 'rgba(54, 162, 235, 0.7)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1,
                            yAxisID: 'y'
                        },
                        {
                            label: 'Quantity Sold',
                            data: quantities,
                            backgroundColor: 'rgba(255, 99, 132, 0.7)',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 1,
                            type: 'line',
                            yAxisID: 'y1'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            type: 'linear',
                            display: true,
                            position: 'left',
                            title: {
                                display: true,
                                text: 'Revenue ($)'
                            },
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return '$' + value.toLocaleString();
                                }
                            }
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            title: {
                                display: true,
                                text: 'Quantity'
                            },
                            beginAtZero: true,
                            grid: {
                                drawOnChartArea: false
                            }
                        }
                    },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.dataset.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    if (context.datasetIndex === 0) {
                                        label += new Intl.NumberFormat('en-US', {
                                            style: 'currency',
                                            currency: 'USD'
                                        }).format(context.parsed.y);
                                    } else {
                                        label += context.parsed.y;
                                    }
                                    return label;
                                }
                            }
                        },
                        title: {
                            display: true,
                            text: 'Sales Performance by Product',
                            font: {
                                size: 18
                            }
                        },
                        legend: {
                            position: 'top',
                        }
                    }
                }
            });
        });
        </script>
    }
