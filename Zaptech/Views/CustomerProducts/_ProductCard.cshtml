@model Zaptech.Models.Product

<div class="card product-card h-100 shadow-sm">
    @if (!string.IsNullOrEmpty(Model.Image))
    {
        <img src="@Url.Content(Model.Image)" class="card-img-top product-image" alt="@Model.Name">
    }
    else
    {
        <img src="~/images/default-product.png" class="card-img-top product-image" alt="Default product image">
    }

    <div class="card-body">
        <div class="d-flex justify-content-between align-items-start">
            <h5 class="card-title">@Model.Name</h5>
            <span class="badge bg-primary">@Model.Category.Name</span>
        </div>

        <p class="card-text text-muted">@(Model.Description.Length > 100 ? Model.Description.Substring(0, 100) + "..." : Model.Description)</p>

        <div class="d-flex justify-content-between align-items-center mt-3">
            <h4 class="text-primary">$@Model.Price.ToString("0.00")</h4>

            <!-- Rating Stars -->
            @{
                var avgRating = Model.Reviews?.Any() == true ? Math.Round(Model.Reviews.Average(r => r.Rating), 1) : 0;
                var reviewCount = Model.Reviews?.Count ?? 0;
            }
            <div class="rating">
                @for (int i = 1; i <= 5; i++)
                {
                    if (i <= avgRating)
                    {
                        <i class="fas fa-star text-warning"></i>
                    }
                    else if (i - 0.5 <= avgRating)
                    {
                        <i class="fas fa-star-half-alt text-warning"></i>
                    }
                    else
                    {
                        <i class="far fa-star text-warning"></i>
                    }
                }
                <small class="text-muted">(@reviewCount)</small>
            </div>
        </div>
    </div>

    <div class="card-footer bg-transparent">
        @Html.ActionLink("View Details", "Details", new { id = Model.Id }, new { @class = "btn btn-outline-primary w-100" })
    </div>
</div>
