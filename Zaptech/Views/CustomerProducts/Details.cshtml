@model Zaptech.Models.Product

@{
    ViewBag.Title = "Product Details";
}

<style>
    /* Product Detail Styles */
    .product-detail-image {
        max-height: 500px;
        object-fit: contain;
        border-radius: 10px;
        padding: 20px;
        background-color: #f8f9fa;
    }

    .product-image-placeholder {
        height: 500px;
        background-color: #f8f9fa;
        border-radius: 10px;
    }

    .review-item {
        padding: 15px;
        transition: background-color 0.2s ease;
    }

        .review-item:hover {
            background-color: #f8f9fa;
            border-radius: 5px;
        }

    /* Quantity Input Styles */
    .quantity-input-group {
        width: 140px;
        margin-right: 15px;
    }

        .quantity-input-group button {
            width: 40px;
        }

        .quantity-input-group input {
            text-align: center;
            border-left: none;
            border-right: none;
        }

    .btn-add-to-cart {
        min-width: 150px;
    }
</style>

<div class="container py-5">
    <div class="row">
        <!-- Product Images -->
        <div class="col-lg-6">
            <div class="card shadow-sm mb-4">
                @if (!string.IsNullOrEmpty(Model.Image))
                {
                    <img src="@Url.Content(Model.Image)" class="card-img-top product-detail-image" alt="@Model.Name">
                }
                else
                {
                    <div class="product-image-placeholder d-flex align-items-center justify-content-center">
                        <i class="fas fa-box-open fa-5x text-muted"></i>
                    </div>
                }
            </div>
        </div>

        <!-- Product Info -->
        <div class="col-lg-6">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h2 class="card-title">@Model.Name</h2>
                    <span class="badge bg-primary mb-3">@(Model.Category?.Name ?? "Uncategorized")</span>

                    <div class="d-flex align-items-center mb-3">
                        <div class="rating me-2">
                            @{
                                var avgRating = Model.Reviews?.Any() == true ? Math.Round(Model.Reviews.Average(r => r.Rating), 1) : 0;
                                var reviewCount = Model.Reviews?.Count ?? 0;

                                for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= avgRating)
                                    {
                                        <i class="fas fa-star text-warning"></i>
                                    }
                                    else if (i - 0.5 <= avgRating)
                                    {
                                        <i class="fas fa-star-half-alt text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="far fa-star text-warning"></i>
                                    }
                                }
                            }
                        </div>
                        <span class="text-muted">@avgRating.ToString("0.0") out of 5 (@reviewCount reviews)</span>
                    </div>

                    <h3 class="text-primary mb-4">$@Model.Price.ToString("0.00")</h3>

                    <p class="card-text">@(string.IsNullOrEmpty(Model.Description) ? "No description available." : Model.Description)</p>

                    <div class="d-flex align-items-center mt-4">
                        @using (Html.BeginForm("AddToCart", "CustomerProducts", FormMethod.Post, new { @class = "add-to-cart-form d-flex align-items-center" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("productId", Model.Id)

                            <div class="input-group quantity-input-group me-3">
                                <button class="btn btn-outline-secondary quantity-minus" type="button">-</button>
                                <input type="number" name="quantity" class="form-control text-center"
                                       value="1" min="1" max="@Model.Stock" id="quantity-input">
                                <button class="btn btn-outline-secondary quantity-plus" type="button">+</button>
                            </div>

                            <button type="submit" class="btn btn-primary btn-add-to-cart">
                                <i class="fas fa-cart-plus me-2"></i>Add to Cart
                            </button>
                        }
                    </div>

                    <div class="mt-3">
                        <span class="@(Model.Stock > 0 ? "text-success" : "text-danger")">
                            @(Model.Stock > 0 ? $"{Model.Stock} in stock" : "Out of stock")
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Reviews Section -->
    <div class="row mt-5">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <h4>Customer Reviews</h4>
                </div>
                <div class="card-body">
                    @if (Model.Reviews != null && Model.Reviews.Any())
                    {
                        foreach (var review in Model.Reviews)
                        {
                            <div class="review-item mb-4 pb-3 border-bottom">
                                <div class="d-flex justify-content-between mb-2">
                                    <h5>@(review.User?.Name ?? "Anonymous")</h5>
                                    <div class="rating">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="@(i <= review.Rating ? "fas" : "far") fa-star text-warning"></i>
                                        }
                                    </div>
                                </div>
                                @if (review.Created_at != null)
                                {
                                    <p class="text-muted"><small>@review.Created_at.ToString("MMMM dd, yyyy")</small></p>
                                }
                                <p>@(string.IsNullOrEmpty(review.Comment) ? "No comment provided." : review.Comment)</p>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="far fa-comment-dots fa-3x text-muted mb-3"></i>
                            <p class="text-muted">No reviews yet. Be the first to review!</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Quantity controls
            $('.quantity-plus').click(function () {
                var input = $(this).closest('.input-group').find('input');
                var max = parseInt(input.attr('max'));
                var value = parseInt(input.val());
                if (value < max) input.val(value + 1);
            });

            $('.quantity-minus').click(function () {
                var input = $(this).closest('.input-group').find('input');
                var value = parseInt(input.val());
                if (value > 1) input.val(value - 1);
            });

            // Add to cart form submission
            $(document).on('submit', '.add-to-cart-form', function (e) {
                e.preventDefault();

                var form = $(this);
                var button = form.find('button[type="submit"]');
                var originalText = button.html();

                // Show loading state
                button.prop('disabled', true).html(
                    '<span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span> Adding...'
                );

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function (response) {
                        if (response.redirectUrl) {
                            // Handle redirects (login or success)
                            window.location.href = response.redirectUrl;
                        }
                        else if (response.success) {
                            // Update cart count in navbar
                            $('.cart-count').text(response.cartItemCount);

                            // Show success message
                            toastr.success(response.message);

                            // Optionally redirect to dashboard after delay
                            setTimeout(function () {
                                window.location.href = '/Customer/Dashboard';
                            }, 1500);
                        }
                        else {
                            // Show error but stay on page
                            toastr.error(response.message || 'Failed to add to cart');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('An error occurred: ' + xhr.statusText);
                    },
                    complete: function () {
                        button.prop('disabled', false).html('<i class="fas fa-cart-plus me-2"></i>Add to Cart');
                    }
                });
            });
        });
    </script>
}