@model PagedList.IPagedList<Zaptech.Models.Category>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Manage Categories";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container my-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fw-semibold text-dark">@ViewBag.Title</h2>
        <button type="button" class="btn btn-success btn-sm rounded-pill px-3" data-bs-toggle="modal" data-bs-target="#createCategoryModal">
            ➕ Create New Category
        </button>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @using (Html.BeginForm("Index", "AdminCategories", FormMethod.Get))
    {
        <div class="row g-2 mb-4">
            <div class="col-md-5">
                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control form-control-lg rounded", placeholder = "🔍 Search by name..." })
            </div>
            <div class="col-md-4">
                @Html.DropDownList("statusFilter", ViewBag.StatusList as SelectList, "All Statuses", new { @class = "form-select form-select-lg rounded" })
            </div>
            <div class="col-md-3 d-grid">
                <button type="submit" class="btn btn-primary btn-lg rounded-pill">Filter Results</button>
            </div>
        </div>
    }

    <div class="table-responsive shadow-sm rounded">
        <table class="table table-hover align-middle mb-0">
            <thead class="table-light border-bottom">
                <tr class="text-secondary text-uppercase small">
                    <th>📁 Name</th>
                    <th>📌 Status</th>
                    <th>🖼️ Image</th>
                    <th class="text-center">⚙️ Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    var imagePath = item.GetType().GetProperty("ImagePath")?.GetValue(item) as string;

                    <tr class="border-bottom">
                        <td class="fw-medium">@item.Name</td>
                        <td>
                            <span class="badge @(
                                item.Status == "Active" ? "bg-success" :
                                item.Status == "Inactive" ? "bg-warning text-dark" : "bg-secondary"
                            )">@item.Status</span>
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(imagePath))
                            {
                                <img src="@imagePath" alt="@item.Name" class="rounded shadow-sm" style="height: 45px;" />
                            }
                            else
                            {
                                <span class="text-muted fst-italic small">No Image</span>
                            }
                        </td>
                        <td class="text-center">
                            <a href="#" class="btn btn-outline-primary btn-sm rounded-pill me-1 open-edit-modal"
                               data-id="@item.Id"
                               data-name="@item.Name"
                               data-status="@item.Status">
                                ✏️ Edit
                            </a>

                            <a href="#" class="btn btn-outline-danger btn-sm rounded-pill open-delete-modal"
                               data-id="@item.Id"
                               data-name="@item.Name">
                                🗑️ Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-center my-4">
        @Html.PagedListPager(Model, page => Url.Action("Index", new
        {
            page,
            searchString = ViewBag.CurrentFilter,
            statusFilter = ViewBag.StatusFilter
        }), new PagedList.Mvc.PagedListRenderOptions
        {
            Display = PagedList.Mvc.PagedListDisplayMode.IfNeeded,
            MaximumPageNumbersToDisplay = 5,
            UlElementClasses = new[] { "pagination pagination-lg" },
            LiElementClasses = new[] { "page-item" },
            FunctionToTransformEachPageLink = (liTag, aTag) =>
            {
                liTag.AddCssClass("page-item");
                aTag.AddCssClass("page-link");
                liTag.InnerHtml = aTag.ToString();
                return liTag;
            }
        })
    </div>
</div>

<!-- ✅ Create Modal -->
<div class="modal fade" id="createCategoryModal" tabindex="-1" aria-labelledby="createCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content rounded-3 shadow-sm">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="createCategoryModalLabel">Create New Category</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body px-4 py-3">
                @using (Html.BeginForm("Create", "AdminCategories", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="mb-3">
                        <label class="form-label fw-semibold">Category Name</label>
                        <input type="text" name="Name" class="form-control rounded" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label fw-semibold">Status</label>
                        <select name="Status" class="form-select rounded">
                            <option value="Active">Active</option>
                            <option value="Inactive">Inactive</option>
                            <option value="Archived">Archived</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label fw-semibold">Image (optional)</label>
                        <input type="file" name="ImageFile" class="form-control rounded" />
                    </div>

                    <div class="d-flex justify-content-end gap-2 mt-3">
                        <button type="button" class="btn btn-secondary btn-sm rounded-pill px-3" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary btn-sm rounded-pill px-3">Save</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- ✅ Edit Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content rounded-3 shadow-sm">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Edit Category</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body px-4 py-3">
                @using (Html.BeginForm("Edit", "AdminCategories", FormMethod.Post, new { enctype = "multipart/form-data", id = "editCategoryForm" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="editCategoryId" />

                    <div class="mb-3">
                        <label class="form-label fw-semibold">Category Name</label>
                        <input type="text" name="Name" id="editCategoryName" class="form-control rounded" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label fw-semibold">Status</label>
                        <select name="Status" id="editCategoryStatus" class="form-select rounded">
                            <option value="Active">Active</option>
                            <option value="Inactive">Inactive</option>
                            <option value="Archived">Archived</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label fw-semibold">New Image (optional)</label>
                        <input type="file" name="ImageFile" class="form-control rounded" />
                    </div>

                    <div class="d-flex justify-content-end gap-2 mt-3">
                        <button type="button" class="btn btn-secondary btn-sm rounded-pill px-3" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary btn-sm rounded-pill px-3">Update</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- ✅ Delete Modal -->
<div class="modal fade" id="deleteCategoryModal" tabindex="-1" aria-labelledby="deleteCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-3 shadow-sm">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Delete Category</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body px-4 py-3">
                <p class="fw-semibold">Are you sure you want to delete <span id="deleteCategoryName" class="text-danger fw-bold"></span>?</p>
                <p class="small text-muted">This cannot be undone. You can't delete categories that contain products.</p>
                @using (Html.BeginForm("Delete", "AdminCategories", FormMethod.Post, new { id = "deleteForm" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="deleteCategoryId" />
                    <div class="d-flex justify-content-end gap-2 mt-3">
                        <button type="button" class="btn btn-secondary btn-sm rounded-pill px-3" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger btn-sm rounded-pill px-3">Confirm Delete</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.open-edit-modal').click(function (e) {
                e.preventDefault();
                const id = $(this).data('id');
                const name = $(this).data('name');
                const status = $(this).data('status');

                $('#editCategoryId').val(id);
                $('#editCategoryName').val(name);
                $('#editCategoryStatus').val(status);
                $('#editCategoryForm').attr('action', '/AdminCategories/Edit/' + id);
                $('#editCategoryModal').modal('show');
            });

            $('.open-delete-modal').click(function (e) {
                e.preventDefault();
                const id = $(this).data('id');
                const name = $(this).data('name');

                $('#deleteCategoryId').val(id);
                $('#deleteCategoryName').text(name);
                $('#deleteForm').attr('action', '/AdminCategories/Delete/' + id);
                $('#deleteCategoryModal').modal('show');
            });
        });
    </script>
}
