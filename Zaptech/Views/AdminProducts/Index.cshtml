@model PagedList.IPagedList<Zaptech.Models.Product>
@using PagedList.Mvc;
@using PagedList;

@{
    ViewBag.Title = "Product Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card shadow-sm rounded">
    <div class="card-header d-flex justify-content-between align-items-center bg-primary text-white">
        <h3 class="card-title mb-0">📦 Product Management</h3>
        <div>
            <a href="@Url.Action("Create")" class="btn btn-light btn-sm me-2">
                <i class="bi bi-plus-lg"></i> Add New
            </a>
            <a href="@Url.Action("CustomerView")" class="btn btn-outline-light btn-sm">
                <i class="bi bi-eye"></i> Customer View
            </a>
        </div>
    </div>

    <div class="card-body">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @using (Html.BeginForm("Index", "AdminProducts", FormMethod.Get))
        {
            <div class="row g-2 mb-3">
                <div class="col-md-5">
                    <div class="input-group">
                        @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Search by name..." })
                        <button class="btn btn-primary" type="submit"><i class="bi bi-search"></i></button>
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.DropDownList("categoryId", (SelectList)ViewBag.CategoryId, "All Categories", new { @class = "form-select", onchange = "this.form.submit()" })
                </div>
            </div>
        }

        <div class="table-responsive">
            <table class="table table-hover align-middle text-nowrap">
                <thead class="table-light">
                    <tr>
                        <th>@Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                        <th>Category</th>
                        <th>Brand</th>
                        <th>@Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.PriceSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                        <th>Stock</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    @if (!string.IsNullOrEmpty(item.Image))
                                    {
                                        <img src="@item.Image" alt="@item.Name" class="rounded me-2" style="width: 50px; height: 50px; object-fit: cover;">
                                    }
                                    <div>
                                        <strong>@item.Name</strong><br />
                                        <small class="text-muted">@((item.Description.Length > 50) ? item.Description.Substring(0, 50) + "..." : item.Description)</small>
                                    </div>
                                </div>
                            </td>
                            <td>@Html.DisplayFor(m => item.Category.Name)</td>
                            <td>@Html.DisplayFor(m => item.Brand_Name)</td>
                            <td>@Html.DisplayFor(m => item.Price)</td>
                            <td>
                                <span class="badge rounded-pill @(item.Stock > 10 ? "bg-success" : item.Stock > 0 ? "bg-warning text-dark" : "bg-danger")">
                                    @item.Stock
                                </span>
                            </td>
                            <td>
                                <button class="btn btn-sm @(item.IsActive ? "btn-success" : "btn-secondary") toggle-status"
                                        data-id="@item.Id">
                                    @(item.IsActive ? "Active" : "Inactive")
                                </button>
                            </td>
                            <td>
                                <div class="btn-group btn-group-sm" role="group" aria-label="Actions">
                                    <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-outline-primary" title="Edit"><i class="bi bi-pencil"></i></a>
                                    <a href="@Url.Action("Details", new { id = item.Id })" class="btn btn-outline-info" title="Details"><i class="bi bi-info-circle"></i></a>
                                    <a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-outline-danger" title="Delete"><i class="bi bi-trash"></i></a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="mt-3 d-flex justify-content-end">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
                new PagedListRenderOptions
                {
                    UlElementClasses = new[] { "pagination pagination-sm" },
                    LiElementClasses = new[] { "page-item" },
                    FunctionToTransformEachPageLink = (liTag, aTag) =>
                    {
                        aTag.AddCssClass("page-link");
                        liTag.InnerHtml = aTag.ToString();
                        return liTag;
                    },
                    DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                    DisplayLinkToNextPage = PagedListDisplayMode.Always,
                    MaximumPageNumbersToDisplay = 5
                })
        </div>
    </div>
</div>

@section Styles {
    <style>
        .table td, .table th {
            vertical-align: middle;
        }

        .btn-group .btn i {
            font-size: 1rem;
            vertical-align: middle;
        }

        .toggle-status {
            min-width: 80px;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.toggle-status').click(function () {
                var button = $(this);
                var id = button.data('id');

                $.post('@Url.Action("ToggleStatus", "AdminProducts")', { id: id }, function (data) {
                    if (data.success) {
                        button.text(data.message);
                        button.toggleClass('btn-success btn-secondary');
                        toastr.success(data.message);
                    } else {
                        toastr.error(data.message);
                    }
                }).fail(function () {
                    toastr.error('Error updating status');
                });
            });

            $('[title]').tooltip();
        });
    </script>
}
