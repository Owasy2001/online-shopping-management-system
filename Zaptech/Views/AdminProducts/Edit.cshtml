@model Zaptech.Models.Product

@{
    ViewBag.Title = "Product Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Edit Product</h3>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="card-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.CreatedAt)
            @Html.HiddenFor(model => model.CreatedBy)
            @Html.HiddenFor(model => model.Seller_ID)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 3 })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter image URL" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Brand_Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Brand_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand_Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="form-check">
                    @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-check-input" } })
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "form-check-label" })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="form-check">
                    @Html.EditorFor(model => model.IsFeatured, new { htmlAttributes = new { @class = "form-check-input" } })
                    @Html.LabelFor(model => model.IsFeatured, htmlAttributes: new { @class = "form-check-label" })
                    @Html.ValidationMessageFor(model => model.IsFeatured, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="card-footer">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary" })
        </div>
    }
</div>